+ 2 * (period/12))]) + ((mdm2 - st)%%36 - 2 * (period/12)) - 1
mr = min(t[(12 * (period/12)):(16* (period/12)+1)])
mrd = which.min(t[(12 * (period/12)):(16* (period/12)+1)])+12 * (period/12) - 1
#calculate metrics season 1
SOS1t = ml1 + SOSth * (M1 - ml1)
SOS1 = mld1 + which(t[mld1:Md1] > SOS1t)[1] - 1
EOS1t = ml2 + EOSth * (M1 - ml2)
EOS1 = Md1 + which(t[Md1:mld2] < EOS1t)[1] - 2
LOS1 = EOS1 - SOS1
cumNDVI1 = sum(t[EOS1:SOS1])
#calculate metrics season 2
SOS2t = ml2 + SOSth * (M2 - ml2)
SOS2 = mld2 + which(t[mld2:Md2] > SOS2t)[1] - 1
EOS2t = mr + EOSth * (M2 - mr)
EOS2 = Md2 + which(t[Md2:mrd] < EOS2t)[1] - 2
LOS2 = EOS2 - SOS2
cumNDVI2 = sum(t[EOS2:SOS2])
plot(1:length(t), t, type = "l",
xaxt = "n", ylim = c(0, liM), xlab = "time",
ylab = "SG filtered NDVI", main = paste(rownames(TS)[j],
"NDVI Series", rownames(year)[i+yst], "-", rownames(year)[i + yed]))
if (yed - yst == 1) {
axis(side = 1, at = seq(((st*12)%%period)/12+1, 16*period/12,period/12), labels = rep(month.abb, 2)[((st*12)%/%period+1):((ed*12)%/%period+12)])
} else {
axis(side = 1, at = seq(((st*12)%%period)/12+1, 16*period/12,period/12), labels = rep(month.abb, 3)[((st*12)%/%period+1):((ed*12)%/%period+24)])
}
points(x = Md1, y = M1, col = "green", pch = 3)
points(x = mld1, y = ml1, col = "red", pch = 3)
points(x = Md2, y = M2, col = "green", pch = 3)
points(x = mld2, y = ml2, col = "red", pch = 3)
points(x = mrd, y = mr, col = "red", pch = 3)
points(x = SOS1, y = t[SOS1], col = "blue", pch = 3)
points(x = EOS1, y = t[EOS1], col = "blue", pch = 3)
points(x = SOS2, y = t[SOS2], col = "blue", pch = 3)
points(x = EOS2, y = t[EOS2], col = "blue", pch = 3)
arrows(SOS1, 0.05, EOS1, 0.05, code = 3, length = 0.1)
arrows(SOS1, -0.5, SOS1, t[SOS1], length = 0, lty = 2)
arrows(EOS1, -0.5, EOS1, t[EOS1], length = 0, lty = 2)
arrows(SOS2, 0.05, EOS2, 0.05, code = 3, length = 0.1)
arrows(SOS2, -0.5, SOS2, t[SOS2], length = 0, lty = 2)
arrows(EOS2, -0.5, EOS2, t[EOS2], length = 0, lty = 2)
text(c(SOS1,SOS2), -0.14, "SOS", xpd = NA)
text(c(EOS1,EOS2), -0.14, "EOS", xpd = NA)
text(mean(c(EOS1, SOS1)), 0.03, paste("cumNDVI =",
as.character(format(cumNDVI1, digits = 5)),
sep = ""))
text(mean(c(EOS2, SOS2)), 0.03, paste("cumNDVI =",
as.character(format(cumNDVI2, digits = 5)),
sep = ""))
mld12=(st+mld1)%%period
Md12=(st+Md1)%%period
mld22=(st+mld2)%%period
Md22=(st+Md2)%%period
SOS12=(st+SOS1)%%period
EOS12=(st+EOS1)%%period
SOS22=(st+SOS2)%%period
EOS22=(st+EOS2)%%period
res = rbind(res, c(round(ml1,3), mld12, round(M1,3), Md12, round(ml2,3), mld22, round(M2,3), Md22, round(SOS1t,3), SOS12, round(EOS1t,3), EOS12, LOS1, round(cumNDVI1, 5), round(SOS2t,3), SOS22, round(EOS2t, 3), EOS22, LOS2, round(cumNDVI2, 5), round(cumNDVI1+cumNDVI2, 5)))
}
res = as.data.frame(res)
names(res) = c("\tml1", "mld1", "M1", "Md1", "ml2", "mld2", "M2", "Md2", "SOS1t", "SOS1", "EOS1t", "EOS1", "LOS1", "cumNDVI1", "SOS2t", "SOS2", "EOS2t", "EOS2", "LOS2", "cumNDVI2", "cumNDVI-tot")
rownames(res) = rownames(year)[(1 - yst):(length(year[, 1]) - 1)]
write(rownames(TS)[j], outfile, append = TRUE, sep = "")
write.table(res, outfile, quote = FALSE, row.names = TRUE, append = TRUE, sep = "\t")
}
}
}
return(ret)
plot(ts(as.numeric(TS[j, ]), start = Ystart, freq = period), ylim = c(lim,
liM), type = "l", xlab = "time", ylab = "NDVI", main = paste(rownames(TS)[j], "NDVI Time Series"))
year = c()
n = 1
while ((n + period - 1) < length(TS[1, ])) {
year = rbind(year, TS[j, n:(n + period - 1)])
n = n + period
}
rownames(year) = Ystart:(Ystart + length(year[, 1]) -
1)
meanC = apply(year, 2, mean)
plot(meanC, ylim = c(lim-0.1, liM), type = "l", xlab = "time",
ylab = "NDVI", xaxt = "n", main = paste(rownames(TS)[j],
"NDVI Annual Time Series"), lwd = 3)
greenup.day.log <- function(ndvi.series,weeks){
a<-turnpoints(ndvi.series)
b<-summary.turnpoints(a)
mini<-min(which(b$pits==TRUE))
maxi<-max(which(b$peaks==TRUE))
temp.data<-data.frame(cbind(c(seq(weeks[mini]-9,weeks[mini]-1),weeks[mini:maxi],seq(weeks[maxi]+1,weeks[maxi]+9)),
c(rep(ndvi.series[mini],9),ndvi.series[mini:maxi],rep(ndvi.series[maxi],9))-ndvi.series[mini]+0.000000000001))
output<-try(getInitial(X2~SSlogis(X1,ASym,xmin,scal),data=temp.data),silent=TRUE)
if(inherits(output,"try-error"))
{sgu<-NA} else sgu<-as.numeric(output[2])
slope<-as.numeric(output[3])
asym <- as.numeric(output[1])+ndvi.series[mini]
predicts<-(output[1]/(1+exp((output[2]-weeks)/output[3])))+ndvi.series[mini]
result<-list(sgu,slope,asym,predicts)
names(result)<-list("greenup","slope","asym","fitval")
return(result)
}
plot(tempout@data$NDVI[1,])
plot(tempout@data$NDVI[2,])
plot(tempout@data$NDVI[3,])
plot(tempout@data$NDVI[4,])
log.mod <- greenup.day.log(as.numeric(tempout@data$NDVI[4,]),1:52)
ndvi.series <- tempout@data$NDVI[4,]
which(diff(sign(diff(ndvi.series)))==-2)+1
library(zoo)
xz <- as.zoo(ndvi.series)
rollapply(xz, 3, function(x) which.min(x)==2)
which(rollapply(xz, 3, function(x) which.min(x)==2)==T)
which(rollapply(xz, 3, function(x) which.max(x)==2)==T)
xz
mins <- which(rollapply(xz, 5, function(x) which.min(x)==2)==T)
maxs <- which(rollapply(xz, 5, function(x) which.max(x)==2)==T)
mins
maxs
mins <- which(rollapply(xz, 10, function(x) which.min(x)==2)==T)
maxs <- which(rollapply(xz, 10, function(x) which.max(x)==2)==T)
mins
maxs
plot(tempout@data$NDVI[1,])
ndvi.series <- tempout@data$NDVI[1,]
xz <- as.zoo(ndvi.series)
mins <- which(rollapply(xz, 10, function(x) which.min(x)==2)==T)
maxs <- which(rollapply(xz, 10, function(x) which.max(x)==2)==T)
mins
maxs
mins <- which(rollapply(xz, 15, function(x) which.min(x)==2)==T)
maxs <- which(rollapply(xz, 15, function(x) which.max(x)==2)==T)
mins
maxs
mins <- which(rollapply(xz, 20, function(x) which.min(x)==2)==T)
maxs <- which(rollapply(xz, 20, function(x) which.max(x)==2)==T)
mins
maxs
mins <- which(rollapply(xz, 26, function(x) which.min(x)==2)==T)
maxs <- which(rollapply(xz, 26, function(x) which.max(x)==2)==T)
mins
maxs
mins <- which(rollapply(xz, 25, function(x) which.min(x)==2)==T)
maxs <- which(rollapply(xz, 25, function(x) which.max(x)==2)==T)
mins
maxs
mins <- which(rollapply(xz, 30, function(x) which.min(x)==2)==T)
maxs <- which(rollapply(xz, 30, function(x) which.max(x)==2)==T)
mins
maxs
ndvi.series <- tempout@data$NDVI[1,]
xz <- as.zoo(ndvi.series)
mins <- which(rollapply(xz, 40, function(x) which.min(x)==2)==T)
maxs <- which(rollapply(xz, 40, function(x) which.max(x)==2)==T)
mins
maxs
source('O:/phd/analysis/rndvi_package/rndvi/R/polyNDVI.R')
library(rndvi)
yrs=1990
wks=seq(1:15)
polyfolder <- "O:\\phd\\analysis\\rndvi_package\\polys"
test <- polyNDVI(yrs,wks,polyfolder)
plot(as.numeric(test[1,3:17]),ylim=c(0.1,0.275),xlab="week",ylab="ndvi",type="l")
lines(1:15,as.numeric(test[2,3:17]))
lines(1:15,as.numeric(test[3,3:17]))
lines(1:15,as.numeric(test[4,3:17]))
lines(1:15,as.numeric(test[5,3:17]))
lines(1:15,as.numeric(test[6,3:17]))
lines(1:15,as.numeric(test[7,3:17]))
lines(1:15,as.numeric(test[8,3:17]))
lines(1:15,as.numeric(test[9,3:17]))
visNDVI(c(1987,2010),c(1,14,26),c(-5,45),c(20,70),lns=T)
visNDVI(c(1982,1998,2015),c(1,14,26),c(-5,45),c(20,70),lns=T)
visNDVI(c(1983,1998,2015),c(1,14,26),c(-5,45),c(20,70),lns=T)
tempout@data$NDVI[1,]
plot(tempout@data$NDVI[1,])
which.min(x)
which.min(ndvi.series)
which.min(ndvi.series)==T
which.min(ndvi.series)==2
which(rollapply(xz, 40, function(x) which.min(x)==2)==T)
ndvi.series <- tempout@data$NDVI[4,]
xz <- as.zoo(ndvi.series)
??as.zoo
library(zoo)
xz <- as.zoo(ndvi.series)
mins <- which(rollapply(xz, 40, function(x) which.min(x)==2)==T)
maxs <- which(rollapply(xz, 40, function(x) which.max(x)==2)==T)
plot(tempout@data$NDVI[1,])
plot(tempout@data$NDVI[4,])
plot(tempout@data$NDVI[4,])
mins
maxs
mins <- which(rollapply(xz, 20, function(x) which.min(x)==2)==T)
maxs <- which(rollapply(xz, 20, function(x) which.max(x)==2)==T)
mins
maxs
n=1
ndvi.series[mins[n]:maxs[n]]
plot(ndvi.series[mins[n]:maxs[n]])
c(rep(ndvi.series[mins[n]],5),ndvi.series[mins[n]:maxs[n]],rep(ndvi.series[maxs[n]],5))
plot(c(rep(ndvi.series[mins[n]],5),ndvi.series[mins[n]:maxs[n]],rep(ndvi.series[maxs[n]],5)))
turnpoints
a<-turnpoints(ndvi.series)
b<-summary.turnpoints(a)
a
mini<-min(which(b$pits==TRUE))
maxi<-max(which(b$peaks==TRUE))
mini
maxi
ndvi.series[mins[n]]
substr(ndvi.series[mins[n]],5,7)
substr(names(ndvi.series[mins[n]],5,7))
substr(names(ndvi.series[mins[n]]),5,7)
as.numeric(substr(names(ndvi.series[mins[n]]),5,7))
as.numeric(substr(names(ndvi.series[mins[n]:maxs[n]]),5,7))
c(rep(ndvi.series[mins[n]],5),ndvi.series[mins[n]:maxs[n]],rep(ndvi.series[maxs[n]],5))-ndvi.series[mini]+0.000000000001)
c(rep(ndvi.series[mins[n]],5),ndvi.series[mins[n]:maxs[n]],rep(ndvi.series[maxs[n]],5))
ndvi.series[mins[n]]
c(rep(ndvi.series[mins[n]],5),ndvi.series[mins[n]:maxs[n]],rep(ndvi.series[maxs[n]],5))-ndvi.series[mins[n]]+0.000000000001
plot(c(rep(ndvi.series[mins[n]],5),ndvi.series[mins[n]:maxs[n]],rep(ndvi.series[maxs[n]],5))-ndvi.series[mins[n]]+0.0000000)00001
plot(c(rep(ndvi.series[mins[n]],5),ndvi.series[mins[n]:maxs[n]],rep(ndvi.series[maxs[n]],5))-ndvi.series[mins[n]]+0.000000000001)
temp.data<-data.frame(weeks=c(rep(as.numeric(substr(names(ndvi.series[mins[n]]),5,7))),as.numeric(substr(names(ndvi.series[mins[n]:maxs[n]]),5,7)),as.numeric(substr(names(ndvi.series[maxs[n]]),5,7))),
ndvi=c(rep(ndvi.series[mins[n]],5),ndvi.series[mins[n]:maxs[n]],rep(ndvi.series[maxs[n]],5))-ndvi.series[mins[n]]+0.000000000001)
c(rep(as.numeric(substr(names(ndvi.series[mins[n]]),5,7))),as.numeric(substr(names(ndvi.series[mins[n]:maxs[n]]),5,7)),as.numeric(substr(names(ndvi.series[maxs[n]]),5,7)))
temp.data<-data.frame(weeks=c(rep(as.numeric(substr(names(ndvi.series[mins[n]]),5,7)),5),as.numeric(substr(names(ndvi.series[mins[n]:maxs[n]]),5,7)),rep(as.numeric(substr(names(ndvi.series[maxs[n]]),5,7)),5)),
ndvi=c(rep(ndvi.series[mins[n]],5),ndvi.series[mins[n]:maxs[n]],rep(ndvi.series[maxs[n]],5))-ndvi.series[mins[n]]+0.000000000001)
temp.data
plot(temp.data)
ndvi.series[mins[n]]),5,7))
seq(as.numeric(substr(names(ndvi.series[mins[n]]),5,7)))
as.numeric(substr(names(ndvi.series[mins[n]]),5,7))
as.numeric(substr(names(ndvi.series[mins[n]]),5,7))-4:as.numeric(substr(names(ndvi.series[mins[n]]),5,7))
(as.numeric(substr(names(ndvi.series[mins[n]]),5,7))-4):(as.numeric(substr(names(ndvi.series[mins[n]]),5,7)))
temp.data<-data.frame(weeks=c((as.numeric(substr(names(ndvi.series[mins[n]]),5,7))-4):(as.numeric(substr(names(ndvi.series[mins[n]]),5,7))),
as.numeric(substr(names(ndvi.series[mins[n]:maxs[n]]),5,7)),
(as.numeric(substr(names(ndvi.series[maxs[n]]),5,7))-4):(as.numeric(substr(names(ndvi.series[maxs[n]]),5,7)))),
ndvi=c(rep(ndvi.series[mins[n]],5),ndvi.series[mins[n]:maxs[n]],rep(ndvi.series[maxs[n]],5))-ndvi.series[mins[n]]+0.000000000001)
plot(temp.data)
temp.data<-data.frame(weeks=c((as.numeric(substr(names(ndvi.series[mins[n]]),5,7))-4):(as.numeric(substr(names(ndvi.series[mins[n]]),5,7))),
as.numeric(substr(names(ndvi.series[mins[n]:maxs[n]]),5,7)),
(as.numeric(substr(names(ndvi.series[maxs[n]]),5,7))):(as.numeric(substr(names(ndvi.series[maxs[n]]),5,7)))+4),
ndvi=c(rep(ndvi.series[mins[n]],5),ndvi.series[mins[n]:maxs[n]],rep(ndvi.series[maxs[n]],5))-ndvi.series[mins[n]]+0.000000000001)
temp.data<-data.frame(weeks=c((as.numeric(substr(names(ndvi.series[mins[n]]),5,7))-4):(as.numeric(substr(names(ndvi.series[mins[n]]),5,7))),
as.numeric(substr(names(ndvi.series[mins[n]:maxs[n]]),5,7)),
(as.numeric(substr(names(ndvi.series[maxs[n]]),5,7))):(as.numeric(substr(names(ndvi.series[maxs[n]]),5,7)))+4),
ndvi=c(rep(ndvi.series[mins[n]],5),ndvi.series[mins[n]:maxs[n]],rep(ndvi.series[maxs[n]],5))-ndvi.series[mins[n]]+0.000000000001)
(as.numeric(substr(names(ndvi.series[maxs[n]]),5,7))):(as.numeric(substr(names(ndvi.series[maxs[n]]),5,7)))+4)
(as.numeric(substr(names(ndvi.series[maxs[n]]),5,7))):(as.numeric(substr(names(ndvi.series[maxs[n]]),5,7))+4))
(as.numeric(substr(names(ndvi.series[maxs[n]]),5,7))):(as.numeric(substr(names(ndvi.series[maxs[n]]),5,7))+4)
temp.data<-data.frame(weeks=c((as.numeric(substr(names(ndvi.series[mins[n]]),5,7))-4):(as.numeric(substr(names(ndvi.series[mins[n]]),5,7))),
as.numeric(substr(names(ndvi.series[mins[n]:maxs[n]]),5,7)),
(as.numeric(substr(names(ndvi.series[maxs[n]]),5,7))):(as.numeric(substr(names(ndvi.series[maxs[n]]),5,7))+4)),
ndvi=c(rep(ndvi.series[mins[n]],5),ndvi.series[mins[n]:maxs[n]],rep(ndvi.series[maxs[n]],5))-ndvi.series[mins[n]]+0.000000000001)
plot(temp.data)
output<-try(getInitial(X2~SSlogis(X1,ASym,xmin,scal),data=temp.data),silent=TRUE)
if(inherits(output,"try-error")){sgu<-NA} else sgu<-as.numeric(output[2])
slope<-as.numeric(output[3])
asym <- as.numeric(output[1])+ndvi.series[mini]
predicts<-(output[1]/(1+exp((output[2]-weeks)/output[3])))+ndvi.series[mini]
slope<-as.numeric(output[3])
asym <- as.numeric(output[1])+ndvi.series[mins[n]]
asym
output
output<-getInitial(ndvi~SSlogis(weeks,ASym,xmin,scal),data=temp.data)
if(inherits(output,"try-error")){sgu<-NA} else sgu<-as.numeric(output[2])
slope<-as.numeric(output[3])
asym <- as.numeric(output[1])+ndvi.series[mins[n]]
predicts<-(output[1]/(1+exp((output[2]-temp.data$weeks)/output[3])))+ndvi.series[mins[n]]
result<-list(sgu,slope,asym,predicts)
names(result)<-list("greenup","slope","asym","fitval")
plot(weeks,ndvi.series)
plot(temp.data)
lines(log.mod$fitval)
lines(predicts)
ndvi.series[mins[n]]
plot(ndvi.series)
lines(predicts)
(output[1]/(1+exp((output[2]-temp.data$weeks)/output[3])))
plot((output[1]/(1+exp((output[2]-temp.data$weeks)/output[3]))))
lines(temp.data)
ndvi.series[temp.data$weeks]
plot(ndvi.series[temp.data$weeks])
lines(output$fitval)
output
summary(output)
tab <- gleTrans(choose.files())
library(GeoLight)
library(maptools)
library(maps)
tab <- gleTrans(choose.files())
## 1) Packages, working directory ----
library(pastecs)
library(devtools)
library(roxygen2)
library(rgdal)
library(raster)
library(RCurl)
library(gdalUtils)
library(tiff)
library(maps)
setwd("O:\\phd\\analysis\\rndvi_package")
intWeeks <- c("001","002","003","004","005","006","007","008","009","010",
"011","012","013","014","015","016","017","018","019","020",
"021","022","023","024","025","026","027","028","029","030",
"031","032","033","034","035","036","037","038","039","040",
"041","042","043","044","045","046","047","048","049","050",
"051","052")
satData <- read.delim(text ="satID satNumber year1 week1 year2 week2
NC 07 1981 35 1984 49
NF 09 1985 09 1988 44
NH 11 1988 46 1994 36
NJ 14 1995 04 2000 52
NL 16 2001 01 2004 01
NL 16 2004 05 2004 10
NL 16 2004 25 2004 28
NL 16 2004 30 2005 05
NN 18 2005 24 2010 52
NP 19 2011 01 9999 99",sep=" ", colClasses=c("character","character","character","character","character","character"), header=T)
yrs=1990
wks=1
polyfolder <- "O:\\phd\\analysis\\rndvi_package\\polys"
test <- polyNDVI(yrs,wks,polyfolder)
yrs=1990
wks=1:2
polyfolder <- "O:\\phd\\analysis\\rndvi_package\\polys"
test <- polyNDVI(yrs,wks,polyfolder)
warnings
warnings()
test
dir.create(paste(tempdir(),"hdfTEMP//",sep="//"))
hdfFolder=paste(tempdir(),"hdfTEMP//",sep="//")
dir.create(paste(tempdir(),"tiffTEMP//",sep="//"))
tiffFolder=paste(tempdir(),"tiffTEMP//",sep="//")
FTPurl <- "ftp://ftp.star.nesdis.noaa.gov/pub/corp/scsb/wguo/data/VHP_16km/VH/"
filenames1 <- getURI(FTPurl)
filenames2 <- substr(filenames1,11,(nchar(filenames1))-2)
filevector1 <- strsplit(filenames2,"\r\n-rw-r--r--")[[1]]
filevector2 <- substr(filevector1,46,75)
filevector3 <- filevector2[grep("*.SM.hdf",filevector2)]
filevector4 <- unique(grep(paste(paste("P",yrs,sep=""),collapse="|"),filevector3, value=TRUE))
filevector5 <-unique(grep(paste(paste(intWeeks[wks],".SM",sep=""),collapse="|"),filevector4, value=TRUE))
satTest<-data.frame(sat=substr(filevector5,13,14),
year=substr(filevector5,17,20),
week=substr(filevector5,22,23),
filter=rep(NA,times=length(filevector5)),stringsAsFactors = FALSE)
for (i in 1:length(filevector5)) {
vect <- ((as.numeric(paste0(satData$year2,satData$week2))-as.numeric(paste0(satTest$year,satTest$week)[i]))+(as.numeric(paste0(satData$year1,satData$week1))-as.numeric(paste0(satTest$year,satTest$week)[i])))
nr<-which(abs(vect-0)==min(abs(vect-0)))
if (as.numeric(paste0(satData$year2,satData$week2))[nr] < as.numeric(paste0(satTest$year,satTest$week)[i])) {
nr = nr+1
}
satTest$filter[i] <- as.character(satTest$sat[i]) == satData$satID[nr]
}
filevector <- filevector5[satTest$filter]
polyvector <- list.files(polyfolder, pattern=".shp$")
polylist <- list()
for (j in 1:length(polyvector)){
polylist[[j]] <- readOGR(dsn=polyfolder,layer=substr(polyvector[j],1,nchar(polyvector[j])-4))
}
temp <- data.frame(centroid.x=rep(NA,length(polyvector)),
centroid.y=rep(NA,length(polyvector)))
values <- matrix(NA,ncol=length(filevector),nrow=length(polyvector),
dimnames=list(substr(polyvector,1,nchar(polyvector)-4),paste0("NDVI.",substr(filevector,17,23))))
sds <- matrix(NA,ncol=length(filevector),nrow=length(polyvector),
dimnames=list(substr(polyvector,1,nchar(polyvector)-4),paste0("SD.",substr(filevector,17,23))))
out<-cbind(temp,values,sds)
i=1
download.file(url=paste(FTPurl,filevector[i],sep=""),
destfile=paste(hdfFolder,substr(filevector[i],13,nchar(filevector[i])),sep=""),
mode='wb',method='auto',quiet=T,cacheOK=FALSE)
hdf <- paste(hdfFolder,substr(filevector[i],13,nchar(filevector[i])),sep="")
tiff <- paste(tiffFolder,paste(substr(filevector[i],13,nchar(filevector[i])-4),"tif",sep="."),sep="")
try(gdal_translate(hdf,tiff,sds=F,verbose=TRUE,of = "GTiff",sd_index=2),silent=T)
r <- raster(tiff, values=TRUE)
mat <- as.matrix(r)
mat[mat == min(mat)] <- NA
r <- raster(mat)
if (sum(grepl("START_LONGITUDE_RANGE=",gdalinfo(hdf))) == 0){
extent(r) <- extent(as.numeric(strsplit(gdalinfo(hdf)[grep("geospatial_lon_min=",gdalinfo(hdf))],
"geospatial_lon_min=")[[1]][2]),
as.numeric(strsplit(gdalinfo(hdf)[grep("geospatial_lon_max=",gdalinfo(hdf))],
"geospatial_lon_max=")[[1]][2]),
as.numeric(strsplit(gdalinfo(hdf)[grep("geospatial_lat_min=",gdalinfo(hdf))],
"geospatial_lat_min=")[[1]][2]),
as.numeric(strsplit(gdalinfo(hdf)[grep("geospatial_lat_max=",gdalinfo(hdf))],
"geospatial_lat_max=")[[1]][2]))
} else {
extent(r) <- extent(as.numeric(strsplit(gdalinfo(hdf)[grep("START_LONGITUDE_RANGE=",gdalinfo(hdf))],
"START_LONGITUDE_RANGE=")[[1]][2]),
as.numeric(strsplit(gdalinfo(hdf)[grep("END_LONGITUDE_RANGE=",gdalinfo(hdf))],
"END_LONGITUDE_RANGE=")[[1]][2]),
as.numeric(strsplit(gdalinfo(hdf)[grep("END_LATITUDE_RANGE=",gdalinfo(hdf))],
"END_LATITUDE_RANGE=")[[1]][2]),
as.numeric(strsplit(gdalinfo(hdf)[grep("START_LATITUDE_RANGE=",gdalinfo(hdf))],
"START_LATITUDE_RANGE=")[[1]][2]))
}
projection(r) <- CRS("+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0")
for (j in 1:length(polyvector)){
out$centroid.x[j] <- getSpPPolygonsLabptSlots(polylist[[j]])[1,1]
out$centroid.y[j] <- getSpPPolygonsLabptSlots(polylist[[j]])[1,2]
ndvis <- raster::extract(r,polylist[[j]]@polygons[[1]]@Polygons[[1]]@coords)
out[j,2+i] <- mean(ndvis,na.rm=T)
out[j,6+i] <- sd(ndvis,na.rm=T)
}
j=1
out$centroid.x[j] <- getSpPPolygonsLabptSlots(polylist[[j]])[1,1]
getSpPPolygonsLabptSlots(polylist[[j]])[1,1]
getSpPPolygonsLabptSlots(polylist[[j]])
polylist[[j]]
str(polylist[[j]])
str(polylist[[j]])@polygons
polylist[[j]]@data$lcMN
getSpPPolygonsLabptSlots(polylist[[j]])[1,2]
getSpPPolygonsLabptSlots(polylist[[j]])[1,1]
polylist[[j]]@data$lcMED
str(polylist[[j]]@polygons)
str(polylist[[j]]@polygons[[1]])
str(polylist[[j]]@polygons[[1]]@Polygons)
str(polylist[[j]]@polygons[[1]]@Polygons[[1]])
str(polylist[[j]]@polygons[[1]]@Polygons[[1]]@coords)
str(polylist[[j]]@polygons[[1]]@Polygons[[1]]@coords[,1])
mean(polylist[[j]]@polygons[[1]]@Polygons[[1]]@coords[,1])
mean(polylist[[j]]@polygons[[1]]@Polygons[[1]]@coords[,2])
getSpPPolygonsLabptSlots(polylist[[j]])[1,2]
test <- polyNDVI(yrs,wks,polyfolder)
source('O:/phd/analysis/rndvi_package/rndvi/R/polyNDVI.R')
test <- polyNDVI(yrs,wks,polyfolder)
plot(as.numeric(test[1,3:17]),ylim=c(0.1,0.275),xlab="week",ylab="ndvi",type="l")
test[1,3:17]
test[1,]
test[1,3:4
]
plot(as.numeric(test[1,3:4]),ylim=c(0.1,0.275),xlab="week",ylab="ndvi",type="l")
lines(1:15,as.numeric(test[2,3:4]))
lines(1:15,as.numeric(test[3,3:4]))
lines(1:15,as.numeric(test[5,3:4]))
lines(1:15,as.numeric(test[6,3:4]))
lines(1:15,as.numeric(test[7,3:4]))
lines(1:15,as.numeric(test[8,3:4]))
lines(1:15,as.numeric(test[9,3:4]))
plot(as.numeric(test[1,3:4]),ylim=c(0.1,0.275),xlab="week",ylab="ndvi",type="l")
lines(1:2,as.numeric(test[2,3:4]))
lines(1:2,as.numeric(test[3,3:4]))
lines(1:2,as.numeric(test[5,3:4]))
lines(1:2,as.numeric(test[6,3:4]))
lines(1:2,as.numeric(test[7,3:4]))
lines(1:2,as.numeric(test[8,3:4]))
lines(1:2,as.numeric(test[9,3:4]))
yrs=1990
wks=c(1,10)
polyfolder <- "O:\\phd\\analysis\\rndvi_package\\polys"
test <- polyNDVI(yrs,wks,polyfolder)
plot(as.numeric(test[1,3:4]),ylim=c(0.1,0.275),xlab="week",ylab="ndvi",type="l")
lines(1:2,as.numeric(test[2,3:4]))
lines(1:2,as.numeric(test[3,3:4]))
lines(1:2,as.numeric(test[5,3:4]))
lines(1:2,as.numeric(test[6,3:4]))
lines(1:2,as.numeric(test[7,3:4]))
lines(1:2,as.numeric(test[8,3:4]))
lines(1:2,as.numeric(test[9,3:4]))
intWeeks <- c("001","002","003","004","005","006","007","008","009","010",
"011","012","013","014","015","016","017","018","019","020",
"021","022","023","024","025","026","027","028","029","030",
"031","032","033","034","035","036","037","038","039","040",
"041","042","043","044","045","046","047","048","049","050",
"051","052")
satData <- read.delim(text ="satID satNumber year1 week1 year2 week2
NC 07 1981 35 1984 49
NF 09 1985 09 1988 44
NH 11 1988 46 1994 36
NJ 14 1995 04 2000 52
NL 16 2001 01 2004 01
NL 16 2004 05 2004 10
NL 16 2004 25 2004 28
NL 16 2004 30 2005 05
NN 18 2005 24 2010 52
NP 19 2011 01 9999 99",sep=" ", colClasses=c("character","character","character","character","character","character"), header=T)
intWeeks
satData
library(rndvi)
library("rndvi", lib.loc="~/R/win-library/3.2")
visNDVI(c(1982,1998,2015),c(1,14,26),c(-5,45),c(20,70),lns=T)
load_all()
library("devtools", lib.loc="~/R/win-library/3.2")
library("roxygen2", lib.loc="~/R/win-library/3.2")
library("devtools", lib.loc="~/R/win-library/3.2")
load_all()
library("rndvi", lib.loc="~/R/win-library/3.2")
satData <- read.delim(text ="satID satNumber year1 week1 year2 week2
NC 07 1981 35 1984 49
NF 09 1985 09 1988 44
NH 11 1988 46 1994 36
NJ 14 1995 04 2000 52
NL 16 2001 01 2004 01
NL 16 2004 05 2004 10
NL 16 2004 25 2004 28
NL 16 2004 30 2005 05
NN 18 2005 24 2010 52
NP 19 2011 01 9999 99",sep=" ", colClasses=c("character","character","character","character","character","character"), header=T)
source('O:/phd/analysis/rndvi_package/rndvi/R/pointNDVI.R')
View(pointNDVI)
library("gdalUtils", lib.loc="~/R/win-library/3.2")
library("raster", lib.loc="~/R/win-library/3.2")
FTPurl <- "ftp://ftp.star.nesdis.noaa.gov/pub/corp/scsb/wguo/data/VHP_16km/VH/"
filenames1 <- getURI(FTPurl)
library(pastecs)
library(devtools)
library(roxygen2)
library(rgdal)
library(raster)
library(RCurl)
library(gdalUtils)
library(tiff)
library(maps)
